name: builder-ci

on:
  push:
    tags:
      - 'v*'

env:
  DOCKERHUB_SLUG: xxacielxx/rutorrent
  GHCR_SLUG: ghcr.io/${{ github.repository }}
  GITTAG: ${GITHUB_REF#refs/*/}
  CREATED: $(date -u +'%Y-%m-%dT%H:%M:%SZ')

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Build Image & Push amd64
        run: |
          docker buildx build \
          --label ${{ env.CREATED }} \
          --label ${{ env.GITTAG }} \
          -t "${{ env.DOCKERHUB_SLUG }}:amd64-latest" \
          --platform linux/amd64 -f ./Dockerfile --push .
      -
        name: Build Image & Push arm32v7
        run: |
          docker buildx build \
          --label ${{ env.CREATED }} \
          --label ${{ env.GITTAG }} \
          -t "${{ env.DOCKERHUB_SLUG }}:arm32v7-latest" \
          --platform linux/arm/v7 -f ./Dockerfile --push .
      -
        name: Build Image & Push arm64v8
        run: |
          docker buildx build \
          --label ${{ env.CREATED }} \
          --label ${{ env.GITTAG }} \
          -t "${{ env.DOCKERHUB_SLUG }}:arm64v8-latest" \
          --platform linux/arm64/v8 -f ./Dockerfile --push .
      -
        name: Create manifests
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          [[ -f Dockerfile ]] && AMD64=${{ env.DOCKERHUB_SLUG }}:amd64-latest
          [[ -f Dockerfile ]] && ARMV7=${{ env.DOCKERHUB_SLUG }}:arm32v7-latest
          [[ -f Dockerfile ]] && ARM64=${{ env.DOCKERHUB_SLUG }}:arm64v8-latest
          echo "*** Push Latest Tag Image ***"
          docker manifest create ${{ env.DOCKERHUB_SLUG }}:latest ${AMD64} ${ARMV7} ${ARM64}
          docker manifest push ${{ env.DOCKERHUB_SLUG }}:latest
