name: testbuild-ci

on:
  push:
    tags:
      - 'test*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Preparation Stage
        id: prep
        run: |
          echo ::set-output name=image::${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
          echo ::set-output name=gittag::${GITHUB_REF#refs/*/}
      -
        name: Labels Stage
        id: leb
        run: |
          echo ::set-output name=version::org.opencontainers.image.version=${{ steps.prep.outputs.gittag }}
          echo ::set-output name=revision::org.opencontainers.image.revision=${GITHUB_SHA}
          echo ::set-output name=created::org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Build Image & Push amd64
        run: |
          docker buildx build \
          --label ${{ steps.leb.outputs.created }} --label ${{ steps.leb.outputs.version }} --label ${{ steps.leb.outputs.revision }} \
          -t "${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}-amd64" \
          -t "${{ steps.prep.outputs.image }}:amd64-latest" \
          --platform linux/amd64 -f ./Dockerfile .
      -
        name: Build Image & Push arm32v7
        run: |
          docker buildx build \
          --label ${{ steps.leb.outputs.created }} --label ${{ steps.leb.outputs.version }} --label ${{ steps.leb.outputs.revision }} \
          -t "${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}-arm32v7" \
          -t "${{ steps.prep.outputs.image }}:arm32v7-latest" \
          --platform linux/arm/v7 -f ./Dockerfile .
      -
        name: Build Image & Push arm64v8
        run: |
          docker buildx build \
          --label ${{ steps.leb.outputs.created }} --label ${{ steps.leb.outputs.version }} --label ${{ steps.leb.outputs.revision }} \
          -t "${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}-arm64v8" \
          -t "${{ steps.prep.outputs.image }}:arm64v8-latest" \
          --platform linux/arm64/v8 -f ./Dockerfile .
      -
        name: Create manifests
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
         # [[ -f Dockerfile ]] && AMD64=${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}-amd64
         # [[ -f Dockerfile ]] && ARM64=${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}-arm64v8
         # [[ -f Dockerfile ]] && ARMV7=${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}-arm32v7
          echo "*** Push GitTag Image ***"
          docker manifest create ${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }} ${AMD64} ${ARMV7} ${ARM64}
          docker manifest push ${{ steps.prep.outputs.image }}:${{ steps.prep.outputs.gittag }}
