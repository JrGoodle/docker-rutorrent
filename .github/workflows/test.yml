name: testbuild-ci

on:
  push:
    branches:
      - 'test'
    tags:
      - 'test*'
    paths-ignore:
      - '**.md'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Preparation Stage
        id: prep
        run: |
          echo ::set-output name=image::${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
          echo ::set-output name=gittag::${GITHUB_REF#refs/*/}
      -
        name: Labels Stage
        id: leb
        run: |
          echo ::set-output name=version::org.opencontainers.image.version=${{ steps.prep.outputs.gittag }}
          echo ::set-output name=revision::org.opencontainers.image.revision=${GITHUB_SHA}
          echo ::set-output name=created::org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
      -
        name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
      -
        name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.meta.outputs.version }}
