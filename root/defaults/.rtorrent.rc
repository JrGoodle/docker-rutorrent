# Initialize plugins
execute2 = {sh,-c,/usr/bin/php7 /var/www/rutorrent/php/initplugins.php rtorrent &}

# Instance layout (base paths)
method.insert = cfg.download_custom, private|const|string, (cat,(cfg.download),"files/")
directory.default.set = (cat,(cfg.download_custom))

# Watch directories (add more as you like, but use unique schedule names)
schedule2 = watch_load, 10, 10, ((load.verbose, (cat, (cfg.download), "watch/*.torrent")))

# Tracker-less torrent and UDP tracker support
dht.mode.set = disable
protocol.pex.set = no
trackers.use_udp.set = no

# Peer settings
## Maximum number of simultanious uploads per torrent
throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 250
## Maximum and minimum number of peers to connect to per torrent
throttle.min_peers.normal.set = 20
throttle.max_peers.normal.set = 60
## Same as above but for seeding completed torrents (-1 = same as downloading)
throttle.min_peers.seed.set = 30
throttle.max_peers.seed.set = 80
trackers.numwant.set = 80
## Global upload and download rate in KiB. "0" for unlimited
throttle.global_down.max_rate.set_kb = 0
throttle.global_up.max_rate.set_kb = 0

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

# Limits for file handle resources, this is optimized for
# an `ulimit` of 1024 (a common default). You MUST leave
# a ceiling of handles reserved for rTorrent's internal needs!
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

# Memory resource usage (increase if you have a large number of items loaded,
# and/or the available resources to spend)
pieces.memory.max.set = 2000M
network.xmlrpc.size_limit.set = 4M

# Other operational settings (check & adapt)
# encoding.add = utf8
encoding.add = UTF-8
# system.umask.set = 0027
network.http.dns_cache_timeout.set = 25
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000000M))
pieces.hash.on_completion.set = no
##view.sort_current = seeding, greater=d.ratio=
##keys.layout.set = qwerty

# Some additional values and commands
method.insert = system.startup_time, value|const, (system.time)
#method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

# Watch a directory for new torrents, and stop those that have been deleted
# schedule2 = watch_directory, 1, 1, (cat,"load.start=",(cfg.watch),"*.torrent")
# schedule2 = untied_directory, 5, 5, (cat,"stop_untied=",(cfg.watch),"*.torrent")

# Close torrents when diskspace is low
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace,1000M))

# Move finished (no need Autotools/Automove plugin on ruTorrent)
# method.insert = d.get_finished_dir, simple, "cat=$cfg.download_complete=,$d.custom1="
# method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,-u,$argument.0=,$argument.1=; d.save_full_session="
# method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.data_path=,$d.get_finished_dir="

# Erase data when torrent deleted (no need erasedata plugin on ruTorrent)
# method.set_key = event.download.erased,delete_erased,"execute=rm,-rf,--,$d.data_path="
